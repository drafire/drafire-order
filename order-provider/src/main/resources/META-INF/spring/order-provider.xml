<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd        http://code.alibabatech.com/schema/dubbo        http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--当前项目在整个分布式架构里面的唯一名称，计算依赖关系的标签-->
    <dubbo:application name="order-provider" owner="drafire"/>

    <!--<dubbo:monitor protocol="registry"/>-->

    <!--dubbo这个服务所要暴露的服务地址所对应的注册中心-->
    <!--如果加上subscribe="false" 则只订阅，不提供服务，zookeeper中会生成节点-->
    <dubbo:registry protocol="zookeeper" address="192.168.141.128:2181,192.168.141.129:2181,192.168.141.130:2181,192.168.141.131:2181"/>

    <!--可以支持多个注册中心，很少用-->
    <!--<dubbo:registry protocol="zookeeper" address="192.168.109.131:2181"/>-->

    <!--当前服务发布所依赖的协议；webserovice、Thrift、Hessain、http-->
    <dubbo:protocol name="dubbo" port="20880"/>

    <!--加上hessian协议-->
    <dubbo:protocol name="hessian" port="8081"/>

    <!--服务发布的配置，需要暴露的服务接口-->
    <dubbo:service
            interface="com.drafire.IOrderServices"
            ref="orderService1" protocol="hessian" version="1.0.0"/>  <!--如果支持多协议，需要指定协议，这里还可以指定注册中心-->

    <dubbo:service interface="com.drafire.IOrderServices" ref="orderService2" timeout="5000" protocol="hessian,dubbo" version="2.0.0"/>
    <!--导入user-api的jar包文件-->
    <import resource="classpath*:META-INF/client/User-Custom.xml"/>

    <context:annotation-config/>
    <context:component-scan base-package="com.drafire.service"/>

</beans>